import pymysqlfrom flask import make_response, Flask, requestimport jsonfrom condos_info import app_condosfrom condos_index import app_indexfrom functools import wrapsapp = Flask(__name__)app.register_blueprint(app_condos)app.register_blueprint(app_index)def login_required_get(func):    @wraps(func)    def inner():        user = request.args.get('login_name')        print(user)        if not user:            result_j = "{" + '"loginrequired_get"' + ":" + '"true"' + "}"            resp = make_response(result_j)            resp.headers['Access-Control-Allow-Origin'] = '*'            resp.headers['Content-Type'] = 'application/json'            resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'            resp.headers['Access-Control-Allow-Credentials'] = 'true'            return resp        else:            print("do get into login-required-get function")            return func()    return innerdef login_required_post(func):    @wraps(func)    def inner():        username = request.form.get('login_name')        print(username)        if not username:            result_j = "{" + '"loginrequired_post"' + ":" + '"true"' + "}"            resp = make_response(result_j)            resp.headers['Access-Control-Allow-Origin'] = '*'            resp.headers['Content-Type'] = 'application/json'            resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'            resp.headers['Access-Control-Allow-Credentials'] = 'true'            return resp        else:            # 在此处 设置 session 并设置 session 过期时间            print("do get into login-required-post function")            return func()    return inner@app.route('/')@login_required_getdef index():    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "SELECT * FROM dashboard_summ"    cursor.execute(sql)    result = cursor.fetchall()    field = cursor.description    column_list = []    for list in field:        column_list.append(list[0])    try:        result_j = '{"result":['        for row in result:            result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + row[0] + '"' + ',' + '"' + column_list[                1] + '"' + ':' + '"' + row[1] + '"' + ',' + '"' + \                        column_list[8] + '"' + ':' + '"' + row[8] + '"' + ',' + '"' + column_list[2] + '"' + ':' + '"' + \                        row[2] + '"' + ',' + '"' + \                        column_list[3] + '"' + ':' + '"' + row[3] + '"' + ',' + '"' + column_list[4] + '"' + ':' + '"' + \                        row[4] + '"' + ',' + '"' + \                        column_list[5] + '"' + ':' + '"' + row[5] + '"' + ',' + '"' + column_list[6] + '"' + ':' + '"' + \                        row[6] + '"' + ',' + '"' + \                        column_list[7] + '"' + ':' + '"' + row[7] + '"' + '}' + ','        result_j = result_j.rstrip(',')        # result_j = result_j[0:-1]        result_j += ']}'    except:        print('ERROR: unable to fetch data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        resp.headers['Access-Control-Allow-Credentials'] = 'true'        return resp@app.route('/products')@login_required_getdef products():    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "SELECT Project_Name, Avg_PSF, Region FROM dashboard_summ ORDER BY Project_Name ASC"    cursor.execute(sql)    result = cursor.fetchall()    field = cursor.description    column_list = []    for list in field:        column_list.append(list[0])    try:        result_j = '{"result":['        for rows in result:            result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + rows[0] + '"' + ',' + '"' + column_list[                1] + '"' + ':' + '"' + rows[1] + '"' + ',' + '"' + column_list[2] + '"' + ':' + '"' + rows[2] + \                        '"' + '}' + ','        result_j = result_j.rstrip(',')        result_j += ']}'    except:        print('ERROR: unable to fetch data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/donutchart')def donutchart():    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "select area_name, area_number from area_summary order by area_name ASC"    cursor.execute(sql)    result = cursor.fetchall()    field = cursor.description    column_list = []    for list in field:        column_list.append(list[0])    try:        result_j = '{"result":['        for row in result:            result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + row[0] + '"' + ',' + '"' + column_list[                1] + '"' + ':' + '"' + row[1] + '"' + '}' + ','        result_j = result_j.rstrip(',')        result_j += ']}'    except:        print('ERROR: unable to fetch data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        resp.headers['Access-Control-Allow-Credentials'] = 'true'        return resp@app.route('/barchart', methods=['POST', 'GET'])@login_required_postdef barchart():    result_j = '{"datafetch" : "false"}'    areaname = request.form.get('name')    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "select project_name, Avg_PSF from dashboard_summ where region =" + '"' +  str(areaname) + '"' + " order by project_name asc"    cursor.execute(sql)    result = cursor.fetchall()    field = cursor.description    column_list = []    for list in field:        column_list.append(list[0])    try:        result_j = '{"result":['        for row in result:            result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + row[0] + '"' + ',' + '"' + column_list[                1] + '"' + ':' + '"' + row[1] + '"' + '}' + ','        result_j = result_j.rstrip(',')        result_j += ']}'    except:        print('ERROR: unable to fetch data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        resp.headers['Access-Control-Allow-Credentials'] = 'true'        return resp@app.route('/chartdata')def chartdata():    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "SELECT Project_Name, Avg_PSF FROM dashboard_summ order by project_name asc"    cursor.execute(sql)    result = cursor.fetchall()    field = cursor.description    column_list = []    for list in field:        column_list.append(list[0])    try:        result_j = '{"result":['        for row in result:            result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + row[0] + '"' + ',' + '"' + column_list[                1] + '"' + ':' + '"' + row[1] + '"' + '}' + ','        result_j = result_j.rstrip(',')        # result_j = result_j[0:-1]        result_j += ']}'    except:        print('ERROR: unable to fetch data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        resp.headers['Access-Control-Allow-Credentials'] = 'true'        return resp@app.route('/personaldetails', methods=['POST', 'GET'])def personaldetails():    communityname = request.form.get('communityname')    updatedate = request.form.get('updatedate')    builders = request.form.get('builders')    buildingtype = request.form.get('buildingtype')    totalstories = request.form.get('totalstories')    totalunits = request.form.get('totalunits')    unittype = request.form.get('unittype')    unitsize = request.form.get('unitsize')    address = request.form.get('address')    intersection = request.form.get('intersection')    estcompletion = request.form.get('estcompletion')    constatus = request.form.get('constatus')    clearview = request.form.get('clearview')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    # sql_temp = "INSERT INTO newcondo_summ(project_name,update_date,builders,building_type,total_stories,total_units,unit_type,unit_size,address,intersection,estimated_completion,construction_status,clear_view) \    # VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s) on duplicate key update "    sql = "INSERT INTO newcondo_summ(project_name,update_date,builders,building_type,total_stories,total_units,unit_type,unit_size,address,intersection,estimated_completion,construction_status,clear_view) VALUES (" \          + '"' + str(communityname) + '"' + ',' + '"' + str(updatedate) + '"' + ',' + '"' + str(        builders) + '"' + ',' + '"' + str(buildingtype) + '"' + ',' + '"' + str(totalstories) + '"' + ',' \          + '"' + str(totalunits) + '"' + ',' + '"' + str(unittype) + '"' + ',' + '"' + str(        unitsize) + '"' + ',' + '"' + str(address) + '"' + ',' + '"' + str(intersection) + '"' + ',' \          + '"' + str(estcompletion) + '"' + ',' + '"' + str(constatus) + '"' + ',' + '"' + str(        clearview) + '"' + ')' + "on duplicate key update update_date = " + '"' + str(updatedate) + '"' + ',' + "builders =" + '"' + str(builders) + '"' + ',' \        + "building_type =" + '"' + str(buildingtype) + '"' + ',' + "total_stories =" + '"' + str(totalstories) + '"' + ',' + "total_units =" + '"' + str(totalunits) + '"' + ',' \        + "unit_type =" + '"' + str(unittype) + '"' + ',' + "unit_size =" + '"' + str(unitsize) + '"' + ',' + "address =" + '"' + str(address) + '"' + ',' + "intersection =" + \        '"' + str(intersection) + '"' + ',' + "estimated_completion =" + '"' + str(estcompletion) + '"' + ',' + "construction_status =" + '"' + str(constatus) + '"' + ',' + \        "clear_view =" + '"' + str(clearview) + '"'    # 链接数据库 并且需要考虑数据的正确更新问题 防止恶意更改数据库数据    try:        if cursor.execute(sql):            print("new condo personal detail sql is executed.")            connect.commit()            result_j = '{"datafetch" : "true"}'    except:        connect.rollback()        print('ERROR: unable to insert personal details data to baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/priceandfee', methods=['POST', 'GET'])def priceandfee():    communityname = request.form.get('communityname')    saleprice = request.form.get('saleprice')    parking = request.form.get('parking')    locker = request.form.get('locker')    assignment = request.form.get('assignment')    psf = request.form.get('psf')    cappedlevy = request.form.get('cappedlevy')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "INSERT INTO newcondo_summ(project_name,sales_price,parking,locker,assignment,psf,capped_levy) VALUES (" + '"' + str(communityname) + '"' + ',' + '"' + str(saleprice) + '"' + ',' + '"' + str(parking) + '"' + ',' + '"' + \          str(locker) + '"' + ',' + '"' + str(assignment) + '"' + ',' + '"' + str(psf) + '"' + ',' + '"' + str(cappedlevy) + '"' + ')' + "on duplicate key update sales_price =" + '"' + str(saleprice) + '"' + ',' + "parking =" \          + '"' + str(parking) + '"' + ',' + "locker =" + '"' + str(locker) + '"' + ',' + "assignment =" + '"' + str(assignment) + '"' + ',' + "psf =" + '"' + str(psf) + '"' + ',' + "capped_levy =" + '"' + str(cappedlevy) + '"'    # 链接数据库 并且需要考虑数据的正确更新问题 防止恶意更改数据库数据    try:        if cursor.execute(sql):            print("new condo price and fee sql is executed.")            connect.commit()            result_j = '{"datafetch" : "true"}'    except:        connect.rollback()        print('ERROR: unable to insert price and fee data to baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/depositstructure', methods=['POST', 'GET'])def depositstructure():    communityname = request.form.get('communityname')    depositstructure = request.form.get('depositstructure')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "INSERT INTO newcondo_summ(project_name, deposit_structure) VALUE(" + '"' + str(communityname) + '"' + ',' + '"' + str(depositstructure) + '"' + ')' + "on duplicate key update deposit_structure =" + '"' + str(depositstructure) + '"'    try:        if cursor.execute(sql):            print("new condo deposit structure sql is executed.")            connect.commit()            result_j = '{"datafetch" : "true"}'    except:        connect.rollback()        print('ERROR: unable to insert deposit structure data to baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/questionandanswer', methods=['POST', 'GET'])def questionandanswer():    communityname = request.form.get('communityname')    qa = request.form.get('qa')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "INSERT INTO newcondo_summ(project_name, qa) VALUE(" + '"' + str(communityname) + '"' + ',' + '"' + str(qa) + '"' + ')' + "on duplicate key update qa =" + '"' + str(qa) + '"'    try:        if cursor.execute(sql):            print("new condo question and answer sql is executed.")            connect.commit()            result_j = '{"datafetch" : "true"}'    except:        connect.rollback()        print('ERROR: unable to insert qanda data to baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/neighbourhood_rental_price', methods=['POST', 'GET'])def neighbourhood_rental_price():    communityname = request.form.get('communityname')    neighbourhood_rental_price = request.form.get('neighbourhood_rental_price')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "INSERT INTO newcondo_summ(project_name, neighbor_rental) VALUE(" + '"' + str(communityname) + '"' + ',' + '"' + str(neighbourhood_rental_price) + '"' + ')' + "on duplicate key update neighbor_rental =" + '"' + str(neighbourhood_rental_price) + '"'    try:        if cursor.execute(sql):            print("new condo nrp sql is executed.")            connect.commit()            result_j = '{"datafetch" : "true"}'    except:        connect.rollback()        print('ERROR: unable to insert nrp data to baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/neighbourhood_condo_for_sale', methods=['POST', 'GET'])def neighbourhood_condo_for_sale():    communityname = request.form.get('communityname')    neighbourhood_condo_for_sale = request.form.get('neighbourhood_condo_for_sale')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "INSERT INTO newcondo_summ(project_name, neighbor_sale) VALUE(" + '"' + str(communityname) + '"' + ',' + '"' + str(neighbourhood_condo_for_sale) + '"' + ')' + "on duplicate key update neighbor_sale =" + '"' + str(neighbourhood_condo_for_sale) + '"'    try:        if cursor.execute(sql):            print("new condo nrs sql is executed.")            connect.commit()    except:        connect.rollback()        print('ERROR: unable to insert data to baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/amenities', methods=['POST', 'GET'])def amenities():    communityname = request.form.get('communityname')    amenities = request.form.getlist('amenities[]')    print(amenities)    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "INSERT INTO newcondo_summ(project_name, amenities) VALUE(" + '"' + str(communityname) + '"' + ',' + '"' + str(amenities) + '"' + ')' + "on duplicate key update amenities =" + '"' + str(amenities) + '"'    try:        if cursor.execute(sql):            print("new condo amenities sql is executed.")            connect.commit()            result_j = '{"datafetch" : "true"}'    except:        connect.rollback()        print('ERROR: unable to insert amenities data to baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/select_personaldetails')def select_personaldetails():    communityname = request.args.get('communityname')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "select project_name, cast(update_date as char) as update_date, builders, building_type, total_stories, total_units, unit_type, unit_size,\    address, intersection, estimated_completion, construction_status, clear_view from newcondo_summ where project_name = %s"    try:        if cursor.execute(sql, (communityname,)):            print("new condo select personal details statement sql is executed.")            result = cursor.fetchall()            field = cursor.description            column_list = []            for list in field:                column_list.append(list[0])            result_j = '{"result":['            for row in result:                result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + row[0] + '"' + ',' + '"' + column_list[                    1] + '"' + ':' + '"' + row[1] + '"' + ',' + '"' + \                            column_list[8] + '"' + ':' + '"' + row[8] + '"' + ',' + '"' + column_list[                                2] + '"' + ':' + '"' + \                            row[2] + '"' + ',' + '"' + \                            column_list[3] + '"' + ':' + '"' + row[3] + '"' + ',' + '"' + column_list[                                4] + '"' + ':' + '"' + \                            row[4] + '"' + ',' + '"' + \                            column_list[5] + '"' + ':' + '"' + row[5] + '"' + ',' + '"' + column_list[                                6] + '"' + ':' + '"' + \                            row[6] + '"' + ',' + '"' + \                            column_list[7] + '"' + ':' + '"' + row[7] + '"' + ',' + '"' + column_list[8] + '"' + ':' + '"' + row[8] + '"' + ',' +\                            '"' + column_list[9] + '"' + ':' + '"' + row[9] + '"' + ',' + '"' + column_list[10] + '"' + ':' + '"' + row[10] + '"' + ',' \                            '"' + column_list[11] + '"' + ':' + '"' + row[11] + '"' + ',' + '"' + column_list[12] + '"' + ':' + '"' + row[12] + '"' + '}' + ','            result_j = result_j.rstrip(',')            result_j += ']}'    except Exception as e:        print('ERROR: unable to fetch selected data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/select_priceandfee')def select_priceandfee():    communityname = request.args.get('communityname')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "select sales_price, parking, locker, assignment, psf, capped_levy from newcondo_summ where project_name = %s"    try:        if cursor.execute(sql, (communityname,)):            print("new condo select price and fee statement sql is executed.")            result = cursor.fetchall()            field = cursor.description            column_list = []            for list in field:                column_list.append(list[0])            result_j = '{"result":['            for row in result:                result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + row[0] + '"' + ',' + '"' + column_list[                    1] + '"' + ':' + '"' + row[1] + '"' + ',' + '"' + column_list[2] + '"' + ':' + '"' + row[2] + '"' + ',' + '"' + column_list[                    3] + '"' + ':' + '"' + row[3] + '"' + ',' + '"' + column_list[4] + '"' + ':' + '"' + row[4] + '"' + ',' + '"' + column_list[                    5] + '"' + ':' + '"' + row[5] + '"' + '}' + ','            result_j = result_j.rstrip(',')            result_j += ']}'    except:        print('ERROR: unable to fetch selected data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/select_depositstructure')def select_depositstructure():    communityname = request.args.get('communityname')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "select deposit_structure from newcondo_summ where project_name = %s"    try:        if cursor.execute(sql, (communityname,)):            print("new condo select price and fee statement sql is executed.")            result = cursor.fetchall()            field = cursor.description            column_list = []            for list in field:                column_list.append(list[0])            result_j = '{"result":['            for row in result:                result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + row[0] + '"' + '}' + ','            result_j = result_j.rstrip(',')            result_j += ']}'    except:        print('ERROR: unable to fetch selected data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/select_qa')def select_qa():    communityname = request.args.get('communityname')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "select qa from newcondo_summ where project_name = %s"    try:        if cursor.execute(sql, (communityname,)):            print("new condo select price and fee statement sql is executed.")            result = cursor.fetchall()            field = cursor.description            column_list = []            for list in field:                column_list.append(list[0])            result_j = '{"result":['            for row in result:                result_j += '{' + '"' + column_list[0] + '"' + ':' + '"' + row[0] + '"' + '}' + ','            result_j = result_j.rstrip(',')            result_j += ']}'            print(result_j)    except:        print('ERROR: unable to fetch selected data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return resp@app.route('/select_amenity')def select_amenity():    communityname = request.args.get('communityname')    result_j = '{"datafetch" : "false"}'    connect = pymysql.connect(        host='localhost',        port=3306,        user='root',        passwd='hwh19931228',        db='baystreet_group'    )    cursor = connect.cursor()    sql = "select amenities from newcondo_summ where project_name = %s"    try:        if cursor.execute(sql, (communityname,)):            print("new condo select amenity statement sql is executed.")            result = cursor.fetchall()            field = cursor.description            print(result)            column_list = []            for list in field:                column_list.append(list[0])            result_j = '{"result":['            for row in result:                row_t = str(row).replace("'", '"')                result_j += '{' + '"' + column_list[0] + '"' + ':' + row_t + '}' + ','            result_j = result_j.rstrip(',')            result_j += ']}'            print(result_j)    except:        print('ERROR: unable to fetch selected data from baystreet_group')    finally:        cursor.close()        connect.close()        resp = make_response(result_j)        resp.headers['Access-Control-Allow-Origin'] = '*'        resp.headers['Content-Type'] = 'application/json'        resp.headers['Access-Control-Allow-Methods'] = 'GET,POST,OPTIONS'        return respif __name__ == '__main__':    app.run(host='0.0.0.0', port=8000, debug=True)